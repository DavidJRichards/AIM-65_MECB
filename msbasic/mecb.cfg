MEMORY {
	ZP:		start = $0000, size = $0100, type = rw;
        SER_INPUT_BUFFER: start = $0200, size = $0100, type = rw, file = "";
	DUMMY:		start = $0000, size = $00FF, file = "";
	FILLER:         start = $A000, size = $800, fill = yes, fillval=36, file = %O;
	DJROM:          start = $A800, size = $800,  fill = yes, fillval=255, file=%O;
	BASROM:		start = $B000, size = $2000, fillval=255, fill = yes, file = %O;
}

SEGMENTS {
	ZEROPAGE:	load = ZP, type = zp;
        SERIAL_INPUT_BUFFER: load = SER_INPUT_BUFFER, type = rw;
	HEADER:		load = BASROM,	type = ro;
	VECTORS:	load = BASROM,	type = ro;
	KEYWORDS:	load = BASROM,	type = ro;
	ERROR:		load = BASROM,	type = ro;
	CODE:		load = BASROM,	type = ro;
	CHRGET:		load = BASROM,	type = ro;
	INIT:		load = BASROM,	type = ro;
	EXTRA:		load = BASROM,	type = ro;
	BIOS:           load = DJROM,   type = ro;
	LCD:            load = DJROM,   type = ro;
	FILLER:         load = FILLER,  type = ro;
	DUMMY:		load = DUMMY; # don't include
}

